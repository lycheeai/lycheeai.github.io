{"version":3,"file":"static/js/setResolver.b3ec3805.chunk.js","mappings":"gMACe,kBAAf,+B,8CAAe,aAAuCA,EAAvC,4FAAkBC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,OAAkBC,EAA/C,EAA+CA,SAAUC,EAAzD,EAAyDA,SAAzD,uCAEWH,QAFX,IAEWA,OAFX,EAEWA,EAAWI,oBAFtB,OAEPD,EAFO,OAE2CE,QAF3C,YAIHH,EAJG,OAKF,aALE,OASF,gBATE,gDAMqBF,QANrB,IAMqBA,OANrB,EAMqBA,EAAWM,cANhC,eAMGC,EANH,OAM+CC,QAAQP,GANvD,kBAOIM,EAASE,oBAAoBC,aAAYC,EAAAA,EAAAA,GAASZ,GAAOI,IAP7D,gCAUwBH,QAVxB,IAUwBA,OAVxB,EAUwBA,EAAWY,iBAVnC,eAUGC,EAVH,OAUqDL,QAAQP,GAV7D,kBAWIY,EAAYJ,oBAAoBC,aAAYC,EAAAA,EAAAA,GAASZ,GAAOI,IAXhE,cAcG,IAAIW,MAAJ,4BAA+BZ,IAdlC,6C","sources":["../node_modules/@ensdomains/ensjs/dist/esm/functions/setResolver.js"],"sourcesContent":["import { namehash } from '../utils/normalise';\nexport default async function ({ contracts, signer }, name, { contract, resolver, }) {\n    if (!resolver) {\n        resolver = (await contracts?.getPublicResolver()).address;\n    }\n    switch (contract) {\n        case 'registry': {\n            const registry = (await contracts?.getRegistry()).connect(signer);\n            return registry.populateTransaction.setResolver(namehash(name), resolver);\n        }\n        case 'nameWrapper': {\n            const nameWrapper = (await contracts?.getNameWrapper()).connect(signer);\n            return nameWrapper.populateTransaction.setResolver(namehash(name), resolver);\n        }\n        default: {\n            throw new Error(`Unknown contract: ${contract}`);\n        }\n    }\n}\n"],"names":["name","contracts","signer","contract","resolver","getPublicResolver","address","getRegistry","registry","connect","populateTransaction","setResolver","namehash","getNameWrapper","nameWrapper","Error"],"sourceRoot":""}