{"version":3,"file":"static/js/getName.e457e387.chunk.js","mappings":"0JACMA,EAAG,yCAAG,aAAsBC,GAAtB,uFAASC,EAAT,EAASA,UAAT,gBACwBA,QADxB,IACwBA,OADxB,EACwBA,EAAWC,uBADnC,cACFC,EADE,OAEFC,EAAcJ,EAAQK,cAAcC,UAAU,GAAK,gBAFjD,kBAGD,CACHC,GAAIJ,EAAkBH,QACtBQ,KAAML,EAAkBM,UAAUC,mBAAmB,UAAW,EAC5DC,EAAAA,EAAAA,GAAcP,OANd,2CAAH,wDAUHQ,EAAM,yCAAG,aAAsBJ,EAAMR,GAA5B,mFAASC,EAAT,EAASA,UACP,OAATO,EADO,wEAGqBP,QAHrB,IAGqBA,OAHrB,EAGqBA,EAAWC,uBAHhC,cAGLC,EAHK,gBAKDU,EAASV,EAAkBM,UAAUK,qBAAqB,UAAWN,GALpE,kBAMA,CACHO,KAAMF,EAAO,GACbG,MAAOH,EAAO,GAAKR,gBAAkBL,EAAQK,cAC7CY,uBAAwBJ,EAAO,GAC/BK,gBAAiBL,EAAO,KAVrB,2DAcA,CAAEE,UAAMI,IAdR,0DAAH,0DAiBZ,WACIpB,IAAAA,EACAa,OAAAA,E,uEC7BSD,EAAgB,SAACI,GAAD,kBAAeK,EAAAA,KAAAA,OAAmBL,GAAMM,SAAS,OAAjD,C","sources":["../node_modules/@ensdomains/ensjs/dist/esm/functions/getName.js","../node_modules/@ensdomains/ensjs/dist/esm/utils/hexEncodedName.js"],"sourcesContent":["import { hexEncodeName } from '../utils/hexEncodedName';\nconst raw = async ({ contracts }, address) => {\n    const universalResolver = await contracts?.getUniversalResolver();\n    const reverseNode = address.toLowerCase().substring(2) + '.addr.reverse';\n    return {\n        to: universalResolver.address,\n        data: universalResolver.interface.encodeFunctionData('reverse', [\n            hexEncodeName(reverseNode),\n        ]),\n    };\n};\nconst decode = async ({ contracts }, data, address) => {\n    if (data === null)\n        return;\n    const universalResolver = await contracts?.getUniversalResolver();\n    try {\n        const result = universalResolver.interface.decodeFunctionResult('reverse', data);\n        return {\n            name: result['0'],\n            match: result['1'].toLowerCase() === address.toLowerCase(),\n            reverseResolverAddress: result['2'],\n            resolverAddress: result['3'],\n        };\n    }\n    catch {\n        return { name: undefined };\n    }\n};\nexport default {\n    raw,\n    decode,\n};\n","import packet from 'dns-packet';\nexport const hexEncodeName = (name) => `0x${packet.name.encode(name).toString('hex')}`;\n"],"names":["raw","address","contracts","getUniversalResolver","universalResolver","reverseNode","toLowerCase","substring","to","data","interface","encodeFunctionData","hexEncodeName","decode","result","decodeFunctionResult","name","match","reverseResolverAddress","resolverAddress","undefined","packet","toString"],"sourceRoot":""}