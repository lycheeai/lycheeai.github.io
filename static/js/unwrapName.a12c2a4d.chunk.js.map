{"version":3,"file":"static/js/unwrapName.a12c2a4d.chunk.js","mappings":"2MAEe,kBAAf,+B,8CAAe,aAAuCA,EAAvC,oGAAkBC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,OAAkBC,EAA/C,EAA+CA,cAAeC,EAA9D,EAA8DA,cACnEC,EAASL,EAAKM,MAAM,KACpBC,EAAYC,EAAAA,UAAwB,CAAC,UAAW,CAACH,EAAO,KACxDI,GAAiBC,EAAAA,EAAAA,GAASL,EAAOM,MAAM,GAAGC,KAAK,MAH1C,gBAIgBX,QAJhB,IAIgBA,OAJhB,EAIgBA,EAAWY,iBAJ3B,UAILC,EAJK,OAI6CC,QAAQb,GAC1C,IAAlBG,EAAOW,QAA8B,QAAdX,EAAO,GALvB,oBAMFD,EANE,uBAOG,IAAIa,MAAM,kDAPb,iCASAH,EAAYI,oBAAoBC,aAAaZ,EAAWH,EAAeD,IATvE,YAYHC,EAZG,uBAaG,IAAIa,MAAM,sDAbb,iCAeAH,EAAYI,oBAAoBE,OAAOX,EAAgBF,EAAWJ,IAflE,6C","sources":["../node_modules/@ensdomains/ensjs/dist/esm/functions/unwrapName.js"],"sourcesContent":["import { utils } from 'ethers';\nimport { namehash } from '../utils/normalise';\nexport default async function ({ contracts, signer }, name, { newController, newRegistrant, }) {\n    const labels = name.split('.');\n    const labelhash = utils.solidityKeccak256(['string'], [labels[0]]);\n    const parentNodehash = namehash(labels.slice(1).join('.'));\n    const nameWrapper = (await contracts?.getNameWrapper()).connect(signer);\n    if (labels.length === 2 && labels[1] === 'eth') {\n        if (!newRegistrant) {\n            throw new Error('newRegistrant must be specified for .eth names');\n        }\n        return nameWrapper.populateTransaction.unwrapETH2LD(labelhash, newRegistrant, newController);\n    }\n    else {\n        if (newRegistrant) {\n            throw new Error('newRegistrant can only be specified for .eth names');\n        }\n        return nameWrapper.populateTransaction.unwrap(parentNodehash, labelhash, newController);\n    }\n}\n"],"names":["name","contracts","signer","newController","newRegistrant","labels","split","labelhash","utils","parentNodehash","namehash","slice","join","getNameWrapper","nameWrapper","connect","length","Error","populateTransaction","unwrapETH2LD","unwrap"],"sourceRoot":""}