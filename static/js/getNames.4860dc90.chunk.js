"use strict";(self.webpackChunkweb3_react=self.webpackChunkweb3_react||[]).push([[182],{26126:function(e,n,r){r.r(n);var t,i,a,o,d,c=r(74165),s=r(42982),u=r(30168),D=r(15861),p=r(1413),y=r(49585),m=r(41477),$=function(e){var n=(0,m.M0)(e.name);return(0,p.Z)((0,p.Z)({},e),{},{name:n,truncatedName:(0,y.zX)(n),createdAt:new Date(1e3*parseInt(e.createdAt)),type:"domain"})},f=function(e){var n=(0,m.M0)(e.domain.name);return(0,p.Z)((0,p.Z)({expiryDate:new Date(1e3*parseInt(e.expiryDate)),registrationDate:new Date(1e3*parseInt(e.registrationDate))},e.domain),{},{name:n,truncatedName:(0,y.zX)(n),type:"registration"})},g=function(){var e=(0,D.Z)((0,c.Z)().mark((function e(n,r){var D,p,y,m,g,l,x,B,w,b,I,k,Z,h,q;return(0,c.Z)().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return D=n.gqlInstance,p=r.address,y=r.type,m=r.page,g=r.pageSize,l=void 0===g?10:g,x=r.orderDirection,B=r.orderBy,w=p.toLowerCase(),b=D.client,I="\n    id\n    labelName\n    labelhash\n    name\n    isMigrated\n    parent {\n        name\n    }\n  ",k={},Z="","all"===y?(Z=D.gql(t||(t=(0,u.Z)(["\n      query getNames(\n        $id: ID!\n        $expiryDate: Int\n      ) {\n        account(id: $id) {\n          registrations(\n            first: 1000\n            where: { expiryDate_gt: $expiryDate }\n          ) {\n            registrationDate\n            expiryDate\n            domain {\n              ","\n            }\n          }\n          domains(first: 1000) {\n            ","\n            createdAt\n          }\n        }\n      }\n    "])),I,I),k={id:w,expiryDate:Math.floor(Date.now()/1e3)-7776e3}):"owner"===y?"number"!==typeof m?(Z=D.gql(i||(i=(0,u.Z)(["\n        query getNames(\n          $id: ID! \n          $orderBy: Domain_orderBy \n          $orderDirection: OrderDirection\n        ) {\n          account(id: $id) {\n            domains(orderBy: $orderBy, orderDirection: $orderDirection) {\n              ","\n              createdAt\n            }\n          }\n        }\n      "])),I),k={id:w,orderBy:B,orderDirection:x}):(Z=D.gql(a||(a=(0,u.Z)(["\n        query getNames(\n          $id: ID!\n          $first: Int\n          $skip: Int\n          $orderBy: Domain_orderBy\n          $orderDirection: OrderDirection\n        ) {\n          account(id: $id) {\n            domains(\n              first: $first\n              skip: $skip\n              orderBy: $orderBy\n              orderDirection: $orderDirection\n            ) {\n              ","\n              createdAt\n            }\n          }\n        }\n      "])),I),k={id:w,first:l,skip:(m||0)*l,orderBy:B,orderDirection:x}):"number"!==typeof m?(Z=D.gql(o||(o=(0,u.Z)(["\n        query getNames(\n          $id: ID!\n          $orderBy: Registration_orderBy\n          $orderDirection: OrderDirection\n          $expiryDate: Int\n        ) {\n          account(id: $id) {\n            registrations(\n              orderBy: $orderBy\n              orderDirection: $orderDirection\n              where: { expiryDate_gt: $expiryDate }\n            ) {\n              registrationDate\n              expiryDate\n              domain {\n                ","\n              }\n            }\n          }\n        }\n      "])),I),k={id:w,orderBy:B,orderDirection:x,expiryDate:Math.floor(Date.now()/1e3)-7776e3}):(Z=D.gql(d||(d=(0,u.Z)(["\n        query getNames(\n          $id: ID!\n          $first: Int\n          $skip: Int\n          $orderBy: Registration_orderBy\n          $orderDirection: OrderDirection\n          $expiryDate: Int\n        ) {\n          account(id: $id) {\n            registrations(\n              first: $first\n              skip: $skip\n              orderBy: $orderBy\n              orderDirection: $orderDirection\n              where: { expiryDate_gt: $expiryDate }\n            ) {\n              registrationDate\n              expiryDate\n              domain {\n                ","\n              }\n            }\n          }\n        }\n      "])),I),k={id:w,first:l,skip:(m||0)*l,orderBy:B,orderDirection:x,expiryDate:Math.floor(Date.now()/1e3)-7776e3}),e.next=10,b.request(Z,k);case 10:if(h=e.sent,q=h.account,"all"!==y){e.next=16;break}return e.abrupt("return",[].concat((0,s.Z)(q.domains.map($)),(0,s.Z)(q.registrations.map(f))).sort((function(e,n){return"desc"===x?"labelName"===B?n.name.localeCompare(e.name):n.createdAt.getTime()-e.createdAt.getTime():"labelName"===B?e.name.localeCompare(n.name):"creationDate"===B?e.createdAt.getTime()-n.createdAt.getTime():void 0})));case 16:if("owner"!==y){e.next=20;break}return e.abrupt("return",q.domains.map($));case 20:return e.abrupt("return",q.registrations.map(f));case 21:case"end":return e.stop()}}),e)})));return function(n,r){return e.apply(this,arguments)}}();n.default=g},49585:function(e,n,r){r.d(n,{zX:function(){return t}});var t=function(e){return e.replace(/(\[.{3})(.{58})(.{3}\])/g,"$1...$3")}},30168:function(e,n,r){function t(e,n){return n||(n=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}r.d(n,{Z:function(){return t}})}}]);
//# sourceMappingURL=getNames.4860dc90.chunk.js.map