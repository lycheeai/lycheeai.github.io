{"version":3,"file":"static/js/setName.0b93c79f.chunk.js","mappings":"qLAAe,gBAAf,+B,8CAAe,aAAuCA,GAAvC,+GAAkBC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,OAA7B,iCAAsE,CAAC,EAAxBC,EAA/C,EAA+CA,QAASC,EAAxD,EAAwDA,SAAxD,SACiBF,EAAOG,aADxB,cACLC,EADK,uBAEqBL,QAFrB,IAEqBA,OAFrB,EAEqBA,EAAWM,sBAFhC,0JAEc,EAA0CC,QAAQN,GAFhE,WAELO,EAFK,MAGPN,EAHO,yCAIsBF,QAJtB,IAIsBA,OAJtB,EAIsBA,EAAWS,oBAJjC,eAIDC,EAJC,yBAKAF,EAAiBG,oBAAoBC,eAAeV,EAASG,EAAeF,GAAYO,EAAeR,QAASH,IALhH,iCAOJS,EAAiBG,oBAAoBE,QAAQd,IAPzC,4C","sources":["../node_modules/@ensdomains/ensjs/dist/esm/functions/setName.js"],"sourcesContent":["export default async function ({ contracts, signer }, name, { address, resolver, } = {}) {\n    const signerAddress = await signer.getAddress();\n    const reverseRegistrar = (await contracts?.getReverseRegistrar())?.connect(signer);\n    if (address) {\n        const publicResolver = await contracts?.getPublicResolver();\n        return reverseRegistrar.populateTransaction.setNameForAddr(address, signerAddress, resolver || publicResolver.address, name);\n    }\n    return reverseRegistrar.populateTransaction.setName(name);\n}\n"],"names":["name","contracts","signer","address","resolver","getAddress","signerAddress","getReverseRegistrar","connect","reverseRegistrar","getPublicResolver","publicResolver","populateTransaction","setNameForAddr","setName"],"sourceRoot":""}