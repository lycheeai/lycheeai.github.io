{"version":3,"file":"static/js/getResolver.be102801.chunk.js","mappings":"qKAEMA,EAAG,yCAAG,aAAsBC,GAAtB,qFAASC,EAAT,EAASA,UAAT,gBACwBA,QADxB,IACwBA,OADxB,EACwBA,EAAWC,uBADnC,cACFC,EADE,yBAED,CACHC,GAAID,EAAkBE,QACtBC,KAAMH,EAAkBI,UAAUC,mBAAmB,eAAgB,EACjEC,EAAAA,EAAAA,GAAcT,OALd,2CAAH,wDASHU,EAAM,yCAAG,aAAsBJ,GAAtB,uFAASL,EAAT,EAASA,UAAT,gBACqBA,QADrB,IACqBA,OADrB,EACqBA,EAAWC,uBADhC,UACLC,EADK,QAELQ,EAAWR,EAAkBI,UAAUK,qBAAqB,eAAgBN,KAE7EK,EAAS,IACkC,OAA5CE,EAAAA,cAA2BF,EAAS,IAL7B,0EAQJA,EAAS,IARL,2CAAH,wDAUZ,WAAiBZ,IAAAA,EAAKW,OAAAA,E,uECpBTD,EAAgB,SAACT,GAAD,kBAAec,EAAAA,KAAAA,OAAmBd,GAAMe,SAAS,OAAjD,C","sources":["../node_modules/@ensdomains/ensjs/dist/esm/functions/getResolver.js","../node_modules/@ensdomains/ensjs/dist/esm/utils/hexEncodedName.js"],"sourcesContent":["import { ethers } from 'ethers';\nimport { hexEncodeName } from '../utils/hexEncodedName';\nconst raw = async ({ contracts }, name) => {\n    const universalResolver = await contracts?.getUniversalResolver();\n    return {\n        to: universalResolver.address,\n        data: universalResolver.interface.encodeFunctionData('findResolver', [\n            hexEncodeName(name),\n        ]),\n    };\n};\nconst decode = async ({ contracts }, data) => {\n    const universalResolver = await contracts?.getUniversalResolver();\n    const response = universalResolver.interface.decodeFunctionResult('findResolver', data);\n    if (!response ||\n        !response[0] ||\n        ethers.utils.hexStripZeros(response[0]) === '0x') {\n        return;\n    }\n    return response[0];\n};\nexport default { raw, decode };\n","import packet from 'dns-packet';\nexport const hexEncodeName = (name) => `0x${packet.name.encode(name).toString('hex')}`;\n"],"names":["raw","name","contracts","getUniversalResolver","universalResolver","to","address","data","interface","encodeFunctionData","hexEncodeName","decode","response","decodeFunctionResult","ethers","packet","toString"],"sourceRoot":""}