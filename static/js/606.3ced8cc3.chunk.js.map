{"version":3,"file":"static/js/606.3ced8cc3.chunk.js","mappings":"g4CACO,SAASA,EAAiBC,GAC/B,OACEC,EAA2BD,IAC3BE,EAA2BF,IAC3BG,EAA0BH,EAE7B,CACM,SAASC,EAA2BD,GACzC,OACEA,EAAKI,OAASC,EAAAA,EAAAA,sBACdL,EAAKI,OAASC,EAAAA,EAAAA,mBAEjB,CACM,SAASC,EAAgBN,GAC9B,OACEA,EAAKI,OAASC,EAAAA,EAAAA,OACdL,EAAKI,OAASC,EAAAA,EAAAA,iBACdL,EAAKI,OAASC,EAAAA,EAAAA,eAEjB,CACM,SAASE,EAAYP,GAC1B,OACEA,EAAKI,OAASC,EAAAA,EAAAA,UACdL,EAAKI,OAASC,EAAAA,EAAAA,KACdL,EAAKI,OAASC,EAAAA,EAAAA,OACdL,EAAKI,OAASC,EAAAA,EAAAA,QACdL,EAAKI,OAASC,EAAAA,EAAAA,SACdL,EAAKI,OAASC,EAAAA,EAAAA,MACdL,EAAKI,OAASC,EAAAA,EAAAA,MACdL,EAAKI,OAASC,EAAAA,EAAAA,MACdL,EAAKI,OAASC,EAAAA,EAAAA,MAEjB,CACM,SAASG,EAAiBR,GAC/B,OACEO,EAAYP,KACXA,EAAKI,OAASC,EAAAA,EAAAA,KACXL,EAAKS,OAAOC,KAAKF,GACjBR,EAAKI,OAASC,EAAAA,EAAAA,OACdL,EAAKW,OAAOD,MAAK,SAACE,GAAD,OAAWJ,EAAiBI,EAAMC,MAAlC,IACjBb,EAAKI,OAASC,EAAAA,EAAAA,SAErB,CACM,SAASS,EAAWd,GACzB,OACEA,EAAKI,OAASC,EAAAA,EAAAA,YACdL,EAAKI,OAASC,EAAAA,EAAAA,WACdL,EAAKI,OAASC,EAAAA,EAAAA,aAEjB,CACM,SAASH,EAA2BF,GACzC,OACEA,EAAKI,OAASC,EAAAA,EAAAA,mBACdU,EAAqBf,IACrBA,EAAKI,OAASC,EAAAA,EAAAA,oBAEjB,CACM,SAASU,EAAqBf,GACnC,OACEA,EAAKI,OAASC,EAAAA,EAAAA,wBACdL,EAAKI,OAASC,EAAAA,EAAAA,wBACdL,EAAKI,OAASC,EAAAA,EAAAA,2BACdL,EAAKI,OAASC,EAAAA,EAAAA,uBACdL,EAAKI,OAASC,EAAAA,EAAAA,sBACdL,EAAKI,OAASC,EAAAA,EAAAA,4BAEjB,CACM,SAASF,EAA0BH,GACxC,OAAOA,EAAKI,OAASC,EAAAA,EAAAA,kBAAyBW,EAAoBhB,EACnE,CACM,SAASgB,EAAoBhB,GAClC,OACEA,EAAKI,OAASC,EAAAA,EAAAA,uBACdL,EAAKI,OAASC,EAAAA,EAAAA,uBACdL,EAAKI,OAASC,EAAAA,EAAAA,0BACdL,EAAKI,OAASC,EAAAA,EAAAA,sBACdL,EAAKI,OAASC,EAAAA,EAAAA,qBACdL,EAAKI,OAASC,EAAAA,EAAAA,2BAEjB,C","sources":["../node_modules/graphql/language/predicates.mjs"],"sourcesContent":["import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n"],"names":["isDefinitionNode","node","isExecutableDefinitionNode","isTypeSystemDefinitionNode","isTypeSystemExtensionNode","kind","Kind","isSelectionNode","isValueNode","isConstValueNode","values","some","fields","field","value","isTypeNode","isTypeDefinitionNode","isTypeExtensionNode"],"sourceRoot":""}