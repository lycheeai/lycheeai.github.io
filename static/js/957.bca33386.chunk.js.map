{"version":3,"file":"static/js/957.bca33386.chunk.js","mappings":"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","sources":["../node_modules/dns-packet/classes.js","../node_modules/dns-packet/index.js","../node_modules/dns-packet/opcodes.js","../node_modules/dns-packet/optioncodes.js","../node_modules/dns-packet/rcodes.js","../node_modules/dns-packet/types.js"],"sourcesContent":["'use strict'\n\nexports.toString = function (klass) {\n  switch (klass) {\n    case 1: return 'IN'\n    case 2: return 'CS'\n    case 3: return 'CH'\n    case 4: return 'HS'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + klass\n}\n\nexports.toClass = function (name) {\n  switch (name.toUpperCase()) {\n    case 'IN': return 1\n    case 'CS': return 2\n    case 'CH': return 3\n    case 'HS': return 4\n    case 'ANY': return 255\n  }\n  return 0\n}\n","'use strict'\n\nconst Buffer = require('buffer').Buffer\nconst types = require('./types')\nconst rcodes = require('./rcodes')\nconst opcodes = require('./opcodes')\nconst classes = require('./classes')\nconst optioncodes = require('./optioncodes')\nconst ip = require('@leichtgewicht/ip-codec')\n\nconst QUERY_FLAG = 0\nconst RESPONSE_FLAG = 1 << 15\nconst FLUSH_MASK = 1 << 15\nconst NOT_FLUSH_MASK = ~FLUSH_MASK\nconst QU_MASK = 1 << 15\nconst NOT_QU_MASK = ~QU_MASK\n\nconst name = exports.name = {}\n\nname.encode = function (str, buf, offset) {\n  if (!buf) buf = Buffer.alloc(name.encodingLength(str))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  // strip leading and trailing .\n  const n = str.replace(/^\\.|\\.$/gm, '')\n  if (n.length) {\n    const list = n.split('.')\n\n    for (let i = 0; i < list.length; i++) {\n      const len = buf.write(list[i], offset + 1)\n      buf[offset] = len\n      offset += len + 1\n    }\n  }\n\n  buf[offset++] = 0\n\n  name.encode.bytes = offset - oldOffset\n  return buf\n}\n\nname.encode.bytes = 0\n\nname.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const list = []\n  let oldOffset = offset\n  let totalLength = 0\n  let consumedBytes = 0\n  let jumped = false\n\n  while (true) {\n    if (offset >= buf.length) {\n      throw new Error('Cannot decode name (buffer overflow)')\n    }\n    const len = buf[offset++]\n    consumedBytes += jumped ? 0 : 1\n\n    if (len === 0) {\n      break\n    } else if ((len & 0xc0) === 0) {\n      if (offset + len > buf.length) {\n        throw new Error('Cannot decode name (buffer overflow)')\n      }\n      totalLength += len + 1\n      if (totalLength > 254) {\n        throw new Error('Cannot decode name (name too long)')\n      }\n      list.push(buf.toString('utf-8', offset, offset + len))\n      offset += len\n      consumedBytes += jumped ? 0 : len\n    } else if ((len & 0xc0) === 0xc0) {\n      if (offset + 1 > buf.length) {\n        throw new Error('Cannot decode name (buffer overflow)')\n      }\n      const jumpOffset = buf.readUInt16BE(offset - 1) - 0xc000\n      if (jumpOffset >= oldOffset) {\n        // Allow only pointers to prior data. RFC 1035, section 4.1.4 states:\n        // \"[...] an entire domain name or a list of labels at the end of a domain name\n        // is replaced with a pointer to a prior occurance (sic) of the same name.\"\n        throw new Error('Cannot decode name (bad pointer)')\n      }\n      offset = jumpOffset\n      oldOffset = jumpOffset\n      consumedBytes += jumped ? 0 : 1\n      jumped = true\n    } else {\n      throw new Error('Cannot decode name (bad label)')\n    }\n  }\n\n  name.decode.bytes = consumedBytes\n  return list.length === 0 ? '.' : list.join('.')\n}\n\nname.decode.bytes = 0\n\nname.encodingLength = function (n) {\n  if (n === '.' || n === '..') return 1\n  return Buffer.byteLength(n.replace(/^\\.|\\.$/gm, '')) + 2\n}\n\nconst string = {}\n\nstring.encode = function (s, buf, offset) {\n  if (!buf) buf = Buffer.alloc(string.encodingLength(s))\n  if (!offset) offset = 0\n\n  const len = buf.write(s, offset + 1)\n  buf[offset] = len\n  string.encode.bytes = len + 1\n  return buf\n}\n\nstring.encode.bytes = 0\n\nstring.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf[offset]\n  const s = buf.toString('utf-8', offset + 1, offset + 1 + len)\n  string.decode.bytes = len + 1\n  return s\n}\n\nstring.decode.bytes = 0\n\nstring.encodingLength = function (s) {\n  return Buffer.byteLength(s) + 1\n}\n\nconst header = {}\n\nheader.encode = function (h, buf, offset) {\n  if (!buf) buf = header.encodingLength(h)\n  if (!offset) offset = 0\n\n  const flags = (h.flags || 0) & 32767\n  const type = h.type === 'response' ? RESPONSE_FLAG : QUERY_FLAG\n\n  buf.writeUInt16BE(h.id || 0, offset)\n  buf.writeUInt16BE(flags | type, offset + 2)\n  buf.writeUInt16BE(h.questions.length, offset + 4)\n  buf.writeUInt16BE(h.answers.length, offset + 6)\n  buf.writeUInt16BE(h.authorities.length, offset + 8)\n  buf.writeUInt16BE(h.additionals.length, offset + 10)\n\n  return buf\n}\n\nheader.encode.bytes = 12\n\nheader.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  if (buf.length < 12) throw new Error('Header must be 12 bytes')\n  const flags = buf.readUInt16BE(offset + 2)\n\n  return {\n    id: buf.readUInt16BE(offset),\n    type: flags & RESPONSE_FLAG ? 'response' : 'query',\n    flags: flags & 32767,\n    flag_qr: ((flags >> 15) & 0x1) === 1,\n    opcode: opcodes.toString((flags >> 11) & 0xf),\n    flag_aa: ((flags >> 10) & 0x1) === 1,\n    flag_tc: ((flags >> 9) & 0x1) === 1,\n    flag_rd: ((flags >> 8) & 0x1) === 1,\n    flag_ra: ((flags >> 7) & 0x1) === 1,\n    flag_z: ((flags >> 6) & 0x1) === 1,\n    flag_ad: ((flags >> 5) & 0x1) === 1,\n    flag_cd: ((flags >> 4) & 0x1) === 1,\n    rcode: rcodes.toString(flags & 0xf),\n    questions: new Array(buf.readUInt16BE(offset + 4)),\n    answers: new Array(buf.readUInt16BE(offset + 6)),\n    authorities: new Array(buf.readUInt16BE(offset + 8)),\n    additionals: new Array(buf.readUInt16BE(offset + 10))\n  }\n}\n\nheader.decode.bytes = 12\n\nheader.encodingLength = function () {\n  return 12\n}\n\nconst runknown = exports.unknown = {}\n\nrunknown.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(runknown.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.length, offset)\n  data.copy(buf, offset + 2)\n\n  runknown.encode.bytes = data.length + 2\n  return buf\n}\n\nrunknown.encode.bytes = 0\n\nrunknown.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n  const data = buf.slice(offset + 2, offset + 2 + len)\n  runknown.decode.bytes = len + 2\n  return data\n}\n\nrunknown.decode.bytes = 0\n\nrunknown.encodingLength = function (data) {\n  return data.length + 2\n}\n\nconst rns = exports.ns = {}\n\nrns.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rns.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rns.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrns.encode.bytes = 0\n\nrns.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n  const dd = name.decode(buf, offset + 2)\n\n  rns.decode.bytes = len + 2\n  return dd\n}\n\nrns.decode.bytes = 0\n\nrns.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nconst rsoa = exports.soa = {}\n\nrsoa.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsoa.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n  name.encode(data.mname, buf, offset)\n  offset += name.encode.bytes\n  name.encode(data.rname, buf, offset)\n  offset += name.encode.bytes\n  buf.writeUInt32BE(data.serial || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.refresh || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.retry || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.expire || 0, offset)\n  offset += 4\n  buf.writeUInt32BE(data.minimum || 0, offset)\n  offset += 4\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rsoa.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrsoa.encode.bytes = 0\n\nrsoa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.mname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.rname = name.decode(buf, offset)\n  offset += name.decode.bytes\n  data.serial = buf.readUInt32BE(offset)\n  offset += 4\n  data.refresh = buf.readUInt32BE(offset)\n  offset += 4\n  data.retry = buf.readUInt32BE(offset)\n  offset += 4\n  data.expire = buf.readUInt32BE(offset)\n  offset += 4\n  data.minimum = buf.readUInt32BE(offset)\n  offset += 4\n\n  rsoa.decode.bytes = offset - oldOffset\n  return data\n}\n\nrsoa.decode.bytes = 0\n\nrsoa.encodingLength = function (data) {\n  return 22 + name.encodingLength(data.mname) + name.encodingLength(data.rname)\n}\n\nconst rtxt = exports.txt = {}\n\nrtxt.encode = function (data, buf, offset) {\n  if (!Array.isArray(data)) data = [data]\n  for (let i = 0; i < data.length; i++) {\n    if (typeof data[i] === 'string') {\n      data[i] = Buffer.from(data[i])\n    }\n    if (!Buffer.isBuffer(data[i])) {\n      throw new Error('Must be a Buffer')\n    }\n  }\n\n  if (!buf) buf = Buffer.alloc(rtxt.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n\n  data.forEach(function (d) {\n    buf[offset++] = d.length\n    d.copy(buf, offset, 0, d.length)\n    offset += d.length\n  })\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rtxt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrtxt.encode.bytes = 0\n\nrtxt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n  let remaining = buf.readUInt16BE(offset)\n  offset += 2\n\n  let data = []\n  while (remaining > 0) {\n    const len = buf[offset++]\n    --remaining\n    if (remaining < len) {\n      throw new Error('Buffer overflow')\n    }\n    data.push(buf.slice(offset, offset + len))\n    offset += len\n    remaining -= len\n  }\n\n  rtxt.decode.bytes = offset - oldOffset\n  return data\n}\n\nrtxt.decode.bytes = 0\n\nrtxt.encodingLength = function (data) {\n  if (!Array.isArray(data)) data = [data]\n  let length = 2\n  data.forEach(function (buf) {\n    if (typeof buf === 'string') {\n      length += Buffer.byteLength(buf) + 1\n    } else {\n      length += buf.length + 1\n    }\n  })\n  return length\n}\n\nconst rnull = exports.null = {}\n\nrnull.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnull.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (typeof data === 'string') data = Buffer.from(data)\n  if (!data) data = Buffer.alloc(0)\n\n  const oldOffset = offset\n  offset += 2\n\n  const len = data.length\n  data.copy(buf, offset, 0, len)\n  offset += len\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rnull.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrnull.encode.bytes = 0\n\nrnull.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n  const len = buf.readUInt16BE(offset)\n\n  offset += 2\n\n  const data = buf.slice(offset, offset + len)\n  offset += len\n\n  rnull.decode.bytes = offset - oldOffset\n  return data\n}\n\nrnull.decode.bytes = 0\n\nrnull.encodingLength = function (data) {\n  if (!data) return 2\n  return (Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data)) + 2\n}\n\nconst rhinfo = exports.hinfo = {}\n\nrhinfo.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rhinfo.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n  string.encode(data.cpu, buf, offset)\n  offset += string.encode.bytes\n  string.encode(data.os, buf, offset)\n  offset += string.encode.bytes\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rhinfo.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrhinfo.encode.bytes = 0\n\nrhinfo.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.cpu = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.os = string.decode(buf, offset)\n  offset += string.decode.bytes\n  rhinfo.decode.bytes = offset - oldOffset\n  return data\n}\n\nrhinfo.decode.bytes = 0\n\nrhinfo.encodingLength = function (data) {\n  return string.encodingLength(data.cpu) + string.encodingLength(data.os) + 2\n}\n\nconst rptr = exports.ptr = {}\nconst rcname = exports.cname = rptr\nconst rdname = exports.dname = rptr\n\nrptr.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rptr.encodingLength(data))\n  if (!offset) offset = 0\n\n  name.encode(data, buf, offset + 2)\n  buf.writeUInt16BE(name.encode.bytes, offset)\n  rptr.encode.bytes = name.encode.bytes + 2\n  return buf\n}\n\nrptr.encode.bytes = 0\n\nrptr.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const data = name.decode(buf, offset + 2)\n  rptr.decode.bytes = name.decode.bytes + 2\n  return data\n}\n\nrptr.decode.bytes = 0\n\nrptr.encodingLength = function (data) {\n  return name.encodingLength(data) + 2\n}\n\nconst rsrv = exports.srv = {}\n\nrsrv.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsrv.encodingLength(data))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(data.priority || 0, offset + 2)\n  buf.writeUInt16BE(data.weight || 0, offset + 4)\n  buf.writeUInt16BE(data.port || 0, offset + 6)\n  name.encode(data.target, buf, offset + 8)\n\n  const len = name.encode.bytes + 6\n  buf.writeUInt16BE(len, offset)\n\n  rsrv.encode.bytes = len + 2\n  return buf\n}\n\nrsrv.encode.bytes = 0\n\nrsrv.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n\n  const data = {}\n  data.priority = buf.readUInt16BE(offset + 2)\n  data.weight = buf.readUInt16BE(offset + 4)\n  data.port = buf.readUInt16BE(offset + 6)\n  data.target = name.decode(buf, offset + 8)\n\n  rsrv.decode.bytes = len + 2\n  return data\n}\n\nrsrv.decode.bytes = 0\n\nrsrv.encodingLength = function (data) {\n  return 8 + name.encodingLength(data.target)\n}\n\nconst rcaa = exports.caa = {}\n\nrcaa.ISSUER_CRITICAL = 1 << 7\n\nrcaa.encode = function (data, buf, offset) {\n  const len = rcaa.encodingLength(data)\n\n  if (!buf) buf = Buffer.alloc(rcaa.encodingLength(data))\n  if (!offset) offset = 0\n\n  if (data.issuerCritical) {\n    data.flags = rcaa.ISSUER_CRITICAL\n  }\n\n  buf.writeUInt16BE(len - 2, offset)\n  offset += 2\n  buf.writeUInt8(data.flags || 0, offset)\n  offset += 1\n  string.encode(data.tag, buf, offset)\n  offset += string.encode.bytes\n  buf.write(data.value, offset)\n  offset += Buffer.byteLength(data.value)\n\n  rcaa.encode.bytes = len\n  return buf\n}\n\nrcaa.encode.bytes = 0\n\nrcaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const len = buf.readUInt16BE(offset)\n  offset += 2\n\n  const oldOffset = offset\n  const data = {}\n  data.flags = buf.readUInt8(offset)\n  offset += 1\n  data.tag = string.decode(buf, offset)\n  offset += string.decode.bytes\n  data.value = buf.toString('utf-8', offset, oldOffset + len)\n\n  data.issuerCritical = !!(data.flags & rcaa.ISSUER_CRITICAL)\n\n  rcaa.decode.bytes = len + 2\n\n  return data\n}\n\nrcaa.decode.bytes = 0\n\nrcaa.encodingLength = function (data) {\n  return string.encodingLength(data.tag) + string.encodingLength(data.value) + 2\n}\n\nconst rmx = exports.mx = {}\n\nrmx.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rmx.encodingLength(data))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  offset += 2\n  buf.writeUInt16BE(data.preference || 0, offset)\n  offset += 2\n  name.encode(data.exchange, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(offset - oldOffset - 2, oldOffset)\n  rmx.encode.bytes = offset - oldOffset\n  return buf\n}\n\nrmx.encode.bytes = 0\n\nrmx.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.preference = buf.readUInt16BE(offset)\n  offset += 2\n  data.exchange = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  rmx.decode.bytes = offset - oldOffset\n  return data\n}\n\nrmx.encodingLength = function (data) {\n  return 4 + name.encodingLength(data.exchange)\n}\n\nconst ra = exports.a = {}\n\nra.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ra.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(4, offset)\n  offset += 2\n  ip.v4.encode(host, buf, offset)\n  ra.encode.bytes = 6\n  return buf\n}\n\nra.encode.bytes = 0\n\nra.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  const host = ip.v4.decode(buf, offset)\n  ra.decode.bytes = 6\n  return host\n}\n\nra.decode.bytes = 0\n\nra.encodingLength = function () {\n  return 6\n}\n\nconst raaaa = exports.aaaa = {}\n\nraaaa.encode = function (host, buf, offset) {\n  if (!buf) buf = Buffer.alloc(raaaa.encodingLength(host))\n  if (!offset) offset = 0\n\n  buf.writeUInt16BE(16, offset)\n  offset += 2\n  ip.v6.encode(host, buf, offset)\n  raaaa.encode.bytes = 18\n  return buf\n}\n\nraaaa.encode.bytes = 0\n\nraaaa.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  offset += 2\n  const host = ip.v6.decode(buf, offset)\n  raaaa.decode.bytes = 18\n  return host\n}\n\nraaaa.decode.bytes = 0\n\nraaaa.encodingLength = function () {\n  return 18\n}\n\nconst roption = exports.option = {}\n\nroption.encode = function (option, buf, offset) {\n  if (!buf) buf = Buffer.alloc(roption.encodingLength(option))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const code = optioncodes.toCode(option.code)\n  buf.writeUInt16BE(code, offset)\n  offset += 2\n  if (option.data) {\n    buf.writeUInt16BE(option.data.length, offset)\n    offset += 2\n    option.data.copy(buf, offset)\n    offset += option.data.length\n  } else {\n    switch (code) {\n      // case 3: NSID.  No encode makes sense.\n      // case 5,6,7: Not implementable\n      case 8: // ECS\n        // note: do IP math before calling\n        const spl = option.sourcePrefixLength || 0\n        const fam = option.family || ip.familyOf(option.ip)\n        const ipBuf = ip.encode(option.ip, Buffer.alloc)\n        const ipLen = Math.ceil(spl / 8)\n        buf.writeUInt16BE(ipLen + 4, offset)\n        offset += 2\n        buf.writeUInt16BE(fam, offset)\n        offset += 2\n        buf.writeUInt8(spl, offset++)\n        buf.writeUInt8(option.scopePrefixLength || 0, offset++)\n\n        ipBuf.copy(buf, offset, 0, ipLen)\n        offset += ipLen\n        break\n      // case 9: EXPIRE (experimental)\n      // case 10: COOKIE.  No encode makes sense.\n      case 11: // KEEP-ALIVE\n        if (option.timeout) {\n          buf.writeUInt16BE(2, offset)\n          offset += 2\n          buf.writeUInt16BE(option.timeout, offset)\n          offset += 2\n        } else {\n          buf.writeUInt16BE(0, offset)\n          offset += 2\n        }\n        break\n      case 12: // PADDING\n        const len = option.length || 0\n        buf.writeUInt16BE(len, offset)\n        offset += 2\n        buf.fill(0, offset, offset + len)\n        offset += len\n        break\n      // case 13:  CHAIN.  Experimental.\n      case 14: // KEY-TAG\n        const tagsLen = option.tags.length * 2\n        buf.writeUInt16BE(tagsLen, offset)\n        offset += 2\n        for (const tag of option.tags) {\n          buf.writeUInt16BE(tag, offset)\n          offset += 2\n        }\n        break\n      default:\n        throw new Error(`Unknown roption code: ${option.code}`)\n    }\n  }\n\n  roption.encode.bytes = offset - oldOffset\n  return buf\n}\n\nroption.encode.bytes = 0\n\nroption.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const option = {}\n  option.code = buf.readUInt16BE(offset)\n  option.type = optioncodes.toString(option.code)\n  offset += 2\n  const len = buf.readUInt16BE(offset)\n  offset += 2\n  option.data = buf.slice(offset, offset + len)\n  switch (option.code) {\n    // case 3: NSID.  No decode makes sense.\n    case 8: // ECS\n      option.family = buf.readUInt16BE(offset)\n      offset += 2\n      option.sourcePrefixLength = buf.readUInt8(offset++)\n      option.scopePrefixLength = buf.readUInt8(offset++)\n      const padded = Buffer.alloc((option.family === 1) ? 4 : 16)\n      buf.copy(padded, 0, offset, offset + len - 4)\n      option.ip = ip.decode(padded)\n      break\n    // case 12: Padding.  No decode makes sense.\n    case 11: // KEEP-ALIVE\n      if (len > 0) {\n        option.timeout = buf.readUInt16BE(offset)\n        offset += 2\n      }\n      break\n    case 14:\n      option.tags = []\n      for (let i = 0; i < len; i += 2) {\n        option.tags.push(buf.readUInt16BE(offset))\n        offset += 2\n      }\n    // don't worry about default.  caller will use data if desired\n  }\n\n  roption.decode.bytes = len + 4\n  return option\n}\n\nroption.decode.bytes = 0\n\nroption.encodingLength = function (option) {\n  if (option.data) {\n    return option.data.length + 4\n  }\n  const code = optioncodes.toCode(option.code)\n  switch (code) {\n    case 8: // ECS\n      const spl = option.sourcePrefixLength || 0\n      return Math.ceil(spl / 8) + 8\n    case 11: // KEEP-ALIVE\n      return (typeof option.timeout === 'number') ? 6 : 4\n    case 12: // PADDING\n      return option.length + 4\n    case 14: // KEY-TAG\n      return 4 + (option.tags.length * 2)\n  }\n  throw new Error(`Unknown roption code: ${option.code}`)\n}\n\nconst ropt = exports.opt = {}\n\nropt.encode = function (options, buf, offset) {\n  if (!buf) buf = Buffer.alloc(ropt.encodingLength(options))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const rdlen = encodingLengthList(options, roption)\n  buf.writeUInt16BE(rdlen, offset)\n  offset = encodeList(options, roption, buf, offset + 2)\n\n  ropt.encode.bytes = offset - oldOffset\n  return buf\n}\n\nropt.encode.bytes = 0\n\nropt.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const options = []\n  let rdlen = buf.readUInt16BE(offset)\n  offset += 2\n  let o = 0\n  while (rdlen > 0) {\n    options[o++] = roption.decode(buf, offset)\n    offset += roption.decode.bytes\n    rdlen -= roption.decode.bytes\n  }\n  ropt.decode.bytes = offset - oldOffset\n  return options\n}\n\nropt.decode.bytes = 0\n\nropt.encodingLength = function (options) {\n  return 2 + encodingLengthList(options || [], roption)\n}\n\nconst rdnskey = exports.dnskey = {}\n\nrdnskey.PROTOCOL_DNSSEC = 3\nrdnskey.ZONE_KEY = 0x80\nrdnskey.SECURE_ENTRYPOINT = 0x8000\n\nrdnskey.encode = function (key, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rdnskey.encodingLength(key))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const keydata = key.key\n  if (!Buffer.isBuffer(keydata)) {\n    throw new Error('Key must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt16BE(key.flags, offset)\n  offset += 2\n  buf.writeUInt8(rdnskey.PROTOCOL_DNSSEC, offset)\n  offset += 1\n  buf.writeUInt8(key.algorithm, offset)\n  offset += 1\n  keydata.copy(buf, offset, 0, keydata.length)\n  offset += keydata.length\n\n  rdnskey.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rdnskey.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrdnskey.encode.bytes = 0\n\nrdnskey.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var key = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  key.flags = buf.readUInt16BE(offset)\n  offset += 2\n  if (buf.readUInt8(offset) !== rdnskey.PROTOCOL_DNSSEC) {\n    throw new Error('Protocol must be 3')\n  }\n  offset += 1\n  key.algorithm = buf.readUInt8(offset)\n  offset += 1\n  key.key = buf.slice(offset, oldOffset + length + 2)\n  offset += key.key.length\n  rdnskey.decode.bytes = offset - oldOffset\n  return key\n}\n\nrdnskey.decode.bytes = 0\n\nrdnskey.encodingLength = function (key) {\n  return 6 + Buffer.byteLength(key.key)\n}\n\nconst rrrsig = exports.rrsig = {}\n\nrrrsig.encode = function (sig, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rrrsig.encodingLength(sig))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const signature = sig.signature\n  if (!Buffer.isBuffer(signature)) {\n    throw new Error('Signature must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt16BE(types.toType(sig.typeCovered), offset)\n  offset += 2\n  buf.writeUInt8(sig.algorithm, offset)\n  offset += 1\n  buf.writeUInt8(sig.labels, offset)\n  offset += 1\n  buf.writeUInt32BE(sig.originalTTL, offset)\n  offset += 4\n  buf.writeUInt32BE(sig.expiration, offset)\n  offset += 4\n  buf.writeUInt32BE(sig.inception, offset)\n  offset += 4\n  buf.writeUInt16BE(sig.keyTag, offset)\n  offset += 2\n  name.encode(sig.signersName, buf, offset)\n  offset += name.encode.bytes\n  signature.copy(buf, offset, 0, signature.length)\n  offset += signature.length\n\n  rrrsig.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rrrsig.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrrrsig.encode.bytes = 0\n\nrrrsig.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var sig = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  sig.typeCovered = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n  sig.algorithm = buf.readUInt8(offset)\n  offset += 1\n  sig.labels = buf.readUInt8(offset)\n  offset += 1\n  sig.originalTTL = buf.readUInt32BE(offset)\n  offset += 4\n  sig.expiration = buf.readUInt32BE(offset)\n  offset += 4\n  sig.inception = buf.readUInt32BE(offset)\n  offset += 4\n  sig.keyTag = buf.readUInt16BE(offset)\n  offset += 2\n  sig.signersName = name.decode(buf, offset)\n  offset += name.decode.bytes\n  sig.signature = buf.slice(offset, oldOffset + length + 2)\n  offset += sig.signature.length\n  rrrsig.decode.bytes = offset - oldOffset\n  return sig\n}\n\nrrrsig.decode.bytes = 0\n\nrrrsig.encodingLength = function (sig) {\n  return 20 +\n    name.encodingLength(sig.signersName) +\n    Buffer.byteLength(sig.signature)\n}\n\nconst rrp = exports.rp = {}\n\nrrp.encode = function (data, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rrp.encodingLength(data))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  offset += 2 // Leave space for length\n  name.encode(data.mbox || '.', buf, offset)\n  offset += name.encode.bytes\n  name.encode(data.txt || '.', buf, offset)\n  offset += name.encode.bytes\n  rrp.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rrp.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrrp.encode.bytes = 0\n\nrrp.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const data = {}\n  offset += 2\n  data.mbox = name.decode(buf, offset) || '.'\n  offset += name.decode.bytes\n  data.txt = name.decode(buf, offset) || '.'\n  offset += name.decode.bytes\n  rrp.decode.bytes = offset - oldOffset\n  return data\n}\n\nrrp.decode.bytes = 0\n\nrrp.encodingLength = function (data) {\n  return 2 + name.encodingLength(data.mbox || '.') + name.encodingLength(data.txt || '.')\n}\n\nconst typebitmap = {}\n\ntypebitmap.encode = function (typelist, buf, offset) {\n  if (!buf) buf = Buffer.alloc(typebitmap.encodingLength(typelist))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var typesByWindow = []\n  for (var i = 0; i < typelist.length; i++) {\n    var typeid = types.toType(typelist[i])\n    if (typesByWindow[typeid >> 8] === undefined) {\n      typesByWindow[typeid >> 8] = []\n    }\n    typesByWindow[typeid >> 8][(typeid >> 3) & 0x1F] |= 1 << (7 - (typeid & 0x7))\n  }\n\n  for (i = 0; i < typesByWindow.length; i++) {\n    if (typesByWindow[i] !== undefined) {\n      var windowBuf = Buffer.from(typesByWindow[i])\n      buf.writeUInt8(i, offset)\n      offset += 1\n      buf.writeUInt8(windowBuf.length, offset)\n      offset += 1\n      windowBuf.copy(buf, offset)\n      offset += windowBuf.length\n    }\n  }\n\n  typebitmap.encode.bytes = offset - oldOffset\n  return buf\n}\n\ntypebitmap.encode.bytes = 0\n\ntypebitmap.decode = function (buf, offset, length) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var typelist = []\n  while (offset - oldOffset < length) {\n    var window = buf.readUInt8(offset)\n    offset += 1\n    var windowLength = buf.readUInt8(offset)\n    offset += 1\n    for (var i = 0; i < windowLength; i++) {\n      var b = buf.readUInt8(offset + i)\n      for (var j = 0; j < 8; j++) {\n        if (b & (1 << (7 - j))) {\n          var typeid = types.toString((window << 8) | (i << 3) | j)\n          typelist.push(typeid)\n        }\n      }\n    }\n    offset += windowLength\n  }\n\n  typebitmap.decode.bytes = offset - oldOffset\n  return typelist\n}\n\ntypebitmap.decode.bytes = 0\n\ntypebitmap.encodingLength = function (typelist) {\n  var extents = []\n  for (var i = 0; i < typelist.length; i++) {\n    var typeid = types.toType(typelist[i])\n    extents[typeid >> 8] = Math.max(extents[typeid >> 8] || 0, typeid & 0xFF)\n  }\n\n  var len = 0\n  for (i = 0; i < extents.length; i++) {\n    if (extents[i] !== undefined) {\n      len += 2 + Math.ceil((extents[i] + 1) / 8)\n    }\n  }\n\n  return len\n}\n\nconst rnsec = exports.nsec = {}\n\nrnsec.encode = function (record, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnsec.encodingLength(record))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  offset += 2 // Leave space for length\n  name.encode(record.nextDomain, buf, offset)\n  offset += name.encode.bytes\n  typebitmap.encode(record.rrtypes, buf, offset)\n  offset += typebitmap.encode.bytes\n\n  rnsec.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rnsec.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrnsec.encode.bytes = 0\n\nrnsec.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var record = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  record.nextDomain = name.decode(buf, offset)\n  offset += name.decode.bytes\n  record.rrtypes = typebitmap.decode(buf, offset, length - (offset - oldOffset))\n  offset += typebitmap.decode.bytes\n\n  rnsec.decode.bytes = offset - oldOffset\n  return record\n}\n\nrnsec.decode.bytes = 0\n\nrnsec.encodingLength = function (record) {\n  return 2 +\n    name.encodingLength(record.nextDomain) +\n    typebitmap.encodingLength(record.rrtypes)\n}\n\nconst rnsec3 = exports.nsec3 = {}\n\nrnsec3.encode = function (record, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rnsec3.encodingLength(record))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const salt = record.salt\n  if (!Buffer.isBuffer(salt)) {\n    throw new Error('salt must be a Buffer')\n  }\n\n  const nextDomain = record.nextDomain\n  if (!Buffer.isBuffer(nextDomain)) {\n    throw new Error('nextDomain must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt8(record.algorithm, offset)\n  offset += 1\n  buf.writeUInt8(record.flags, offset)\n  offset += 1\n  buf.writeUInt16BE(record.iterations, offset)\n  offset += 2\n  buf.writeUInt8(salt.length, offset)\n  offset += 1\n  salt.copy(buf, offset, 0, salt.length)\n  offset += salt.length\n  buf.writeUInt8(nextDomain.length, offset)\n  offset += 1\n  nextDomain.copy(buf, offset, 0, nextDomain.length)\n  offset += nextDomain.length\n  typebitmap.encode(record.rrtypes, buf, offset)\n  offset += typebitmap.encode.bytes\n\n  rnsec3.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rnsec3.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrnsec3.encode.bytes = 0\n\nrnsec3.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var record = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  record.algorithm = buf.readUInt8(offset)\n  offset += 1\n  record.flags = buf.readUInt8(offset)\n  offset += 1\n  record.iterations = buf.readUInt16BE(offset)\n  offset += 2\n  const saltLength = buf.readUInt8(offset)\n  offset += 1\n  record.salt = buf.slice(offset, offset + saltLength)\n  offset += saltLength\n  const hashLength = buf.readUInt8(offset)\n  offset += 1\n  record.nextDomain = buf.slice(offset, offset + hashLength)\n  offset += hashLength\n  record.rrtypes = typebitmap.decode(buf, offset, length - (offset - oldOffset))\n  offset += typebitmap.decode.bytes\n\n  rnsec3.decode.bytes = offset - oldOffset\n  return record\n}\n\nrnsec3.decode.bytes = 0\n\nrnsec3.encodingLength = function (record) {\n  return 8 +\n    record.salt.length +\n    record.nextDomain.length +\n    typebitmap.encodingLength(record.rrtypes)\n}\n\nconst rds = exports.ds = {}\n\nrds.encode = function (digest, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rds.encodingLength(digest))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const digestdata = digest.digest\n  if (!Buffer.isBuffer(digestdata)) {\n    throw new Error('Digest must be a Buffer')\n  }\n\n  offset += 2 // Leave space for length\n  buf.writeUInt16BE(digest.keyTag, offset)\n  offset += 2\n  buf.writeUInt8(digest.algorithm, offset)\n  offset += 1\n  buf.writeUInt8(digest.digestType, offset)\n  offset += 1\n  digestdata.copy(buf, offset, 0, digestdata.length)\n  offset += digestdata.length\n\n  rds.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rds.encode.bytes - 2, oldOffset)\n  return buf\n}\n\nrds.encode.bytes = 0\n\nrds.decode = function (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  var digest = {}\n  var length = buf.readUInt16BE(offset)\n  offset += 2\n  digest.keyTag = buf.readUInt16BE(offset)\n  offset += 2\n  digest.algorithm = buf.readUInt8(offset)\n  offset += 1\n  digest.digestType = buf.readUInt8(offset)\n  offset += 1\n  digest.digest = buf.slice(offset, oldOffset + length + 2)\n  offset += digest.digest.length\n  rds.decode.bytes = offset - oldOffset\n  return digest\n}\n\nrds.decode.bytes = 0\n\nrds.encodingLength = function (digest) {\n  return 6 + Buffer.byteLength(digest.digest)\n}\n\nconst rsshfp = exports.sshfp = {}\n\nrsshfp.getFingerprintLengthForHashType = function getFingerprintLengthForHashType (hashType) {\n  switch (hashType) {\n    case 1: return 20\n    case 2: return 32\n  }\n}\n\nrsshfp.encode = function encode (record, buf, offset) {\n  if (!buf) buf = Buffer.alloc(rsshfp.encodingLength(record))\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  offset += 2 // The function call starts with the offset pointer at the RDLENGTH field, not the RDATA one\n  buf[offset] = record.algorithm\n  offset += 1\n  buf[offset] = record.hash\n  offset += 1\n\n  const fingerprintBuf = Buffer.from(record.fingerprint.toUpperCase(), 'hex')\n  if (fingerprintBuf.length !== rsshfp.getFingerprintLengthForHashType(record.hash)) {\n    throw new Error('Invalid fingerprint length')\n  }\n  fingerprintBuf.copy(buf, offset)\n  offset += fingerprintBuf.byteLength\n\n  rsshfp.encode.bytes = offset - oldOffset\n  buf.writeUInt16BE(rsshfp.encode.bytes - 2, oldOffset)\n\n  return buf\n}\n\nrsshfp.encode.bytes = 0\n\nrsshfp.decode = function decode (buf, offset) {\n  if (!offset) offset = 0\n  const oldOffset = offset\n\n  const record = {}\n  offset += 2 // Account for the RDLENGTH field\n  record.algorithm = buf[offset]\n  offset += 1\n  record.hash = buf[offset]\n  offset += 1\n\n  const fingerprintLength = rsshfp.getFingerprintLengthForHashType(record.hash)\n  record.fingerprint = buf.slice(offset, offset + fingerprintLength).toString('hex').toUpperCase()\n  offset += fingerprintLength\n  rsshfp.decode.bytes = offset - oldOffset\n  return record\n}\n\nrsshfp.decode.bytes = 0\n\nrsshfp.encodingLength = function (record) {\n  return 4 + Buffer.from(record.fingerprint, 'hex').byteLength\n}\n\nconst renc = exports.record = function (type) {\n  switch (type.toUpperCase()) {\n    case 'A': return ra\n    case 'PTR': return rptr\n    case 'CNAME': return rcname\n    case 'DNAME': return rdname\n    case 'TXT': return rtxt\n    case 'NULL': return rnull\n    case 'AAAA': return raaaa\n    case 'SRV': return rsrv\n    case 'HINFO': return rhinfo\n    case 'CAA': return rcaa\n    case 'NS': return rns\n    case 'SOA': return rsoa\n    case 'MX': return rmx\n    case 'OPT': return ropt\n    case 'DNSKEY': return rdnskey\n    case 'RRSIG': return rrrsig\n    case 'RP': return rrp\n    case 'NSEC': return rnsec\n    case 'NSEC3': return rnsec3\n    case 'SSHFP': return rsshfp\n    case 'DS': return rds\n  }\n  return runknown\n}\n\nconst answer = exports.answer = {}\n\nanswer.encode = function (a, buf, offset) {\n  if (!buf) buf = Buffer.alloc(answer.encodingLength(a))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  name.encode(a.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(a.type), offset)\n\n  if (a.type.toUpperCase() === 'OPT') {\n    if (a.name !== '.') {\n      throw new Error('OPT name must be root.')\n    }\n    buf.writeUInt16BE(a.udpPayloadSize || 4096, offset + 2)\n    buf.writeUInt8(a.extendedRcode || 0, offset + 4)\n    buf.writeUInt8(a.ednsVersion || 0, offset + 5)\n    buf.writeUInt16BE(a.flags || 0, offset + 6)\n\n    offset += 8\n    ropt.encode(a.options || [], buf, offset)\n    offset += ropt.encode.bytes\n  } else {\n    let klass = classes.toClass(a.class === undefined ? 'IN' : a.class)\n    if (a.flush) klass |= FLUSH_MASK // the 1st bit of the class is the flush bit\n    buf.writeUInt16BE(klass, offset + 2)\n    buf.writeUInt32BE(a.ttl || 0, offset + 4)\n\n    offset += 8\n    const enc = renc(a.type)\n    enc.encode(a.data, buf, offset)\n    offset += enc.encode.bytes\n  }\n\n  answer.encode.bytes = offset - oldOffset\n  return buf\n}\n\nanswer.encode.bytes = 0\n\nanswer.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const a = {}\n  const oldOffset = offset\n\n  a.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n  a.type = types.toString(buf.readUInt16BE(offset))\n  if (a.type === 'OPT') {\n    a.udpPayloadSize = buf.readUInt16BE(offset + 2)\n    a.extendedRcode = buf.readUInt8(offset + 4)\n    a.ednsVersion = buf.readUInt8(offset + 5)\n    a.flags = buf.readUInt16BE(offset + 6)\n    a.flag_do = ((a.flags >> 15) & 0x1) === 1\n    a.options = ropt.decode(buf, offset + 8)\n    offset += 8 + ropt.decode.bytes\n  } else {\n    const klass = buf.readUInt16BE(offset + 2)\n    a.ttl = buf.readUInt32BE(offset + 4)\n\n    a.class = classes.toString(klass & NOT_FLUSH_MASK)\n    a.flush = !!(klass & FLUSH_MASK)\n\n    const enc = renc(a.type)\n    a.data = enc.decode(buf, offset + 8)\n    offset += 8 + enc.decode.bytes\n  }\n\n  answer.decode.bytes = offset - oldOffset\n  return a\n}\n\nanswer.decode.bytes = 0\n\nanswer.encodingLength = function (a) {\n  const data = (a.data !== null && a.data !== undefined) ? a.data : a.options\n  return name.encodingLength(a.name) + 8 + renc(a.type).encodingLength(data)\n}\n\nconst question = exports.question = {}\n\nquestion.encode = function (q, buf, offset) {\n  if (!buf) buf = Buffer.alloc(question.encodingLength(q))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  name.encode(q.name, buf, offset)\n  offset += name.encode.bytes\n\n  buf.writeUInt16BE(types.toType(q.type), offset)\n  offset += 2\n\n  buf.writeUInt16BE(classes.toClass(q.class === undefined ? 'IN' : q.class), offset)\n  offset += 2\n\n  question.encode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.encode.bytes = 0\n\nquestion.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  const q = {}\n\n  q.name = name.decode(buf, offset)\n  offset += name.decode.bytes\n\n  q.type = types.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  q.class = classes.toString(buf.readUInt16BE(offset))\n  offset += 2\n\n  const qu = !!(q.class & QU_MASK)\n  if (qu) q.class &= NOT_QU_MASK\n\n  question.decode.bytes = offset - oldOffset\n  return q\n}\n\nquestion.decode.bytes = 0\n\nquestion.encodingLength = function (q) {\n  return name.encodingLength(q.name) + 4\n}\n\nexports.AUTHORITATIVE_ANSWER = 1 << 10\nexports.TRUNCATED_RESPONSE = 1 << 9\nexports.RECURSION_DESIRED = 1 << 8\nexports.RECURSION_AVAILABLE = 1 << 7\nexports.AUTHENTIC_DATA = 1 << 5\nexports.CHECKING_DISABLED = 1 << 4\nexports.DNSSEC_OK = 1 << 15\n\nexports.encode = function (result, buf, offset) {\n  const allocing = !buf\n\n  if (allocing) buf = Buffer.alloc(exports.encodingLength(result))\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n\n  if (!result.questions) result.questions = []\n  if (!result.answers) result.answers = []\n  if (!result.authorities) result.authorities = []\n  if (!result.additionals) result.additionals = []\n\n  header.encode(result, buf, offset)\n  offset += header.encode.bytes\n\n  offset = encodeList(result.questions, question, buf, offset)\n  offset = encodeList(result.answers, answer, buf, offset)\n  offset = encodeList(result.authorities, answer, buf, offset)\n  offset = encodeList(result.additionals, answer, buf, offset)\n\n  exports.encode.bytes = offset - oldOffset\n\n  // just a quick sanity check\n  if (allocing && exports.encode.bytes !== buf.length) {\n    return buf.slice(0, exports.encode.bytes)\n  }\n\n  return buf\n}\n\nexports.encode.bytes = 0\n\nexports.decode = function (buf, offset) {\n  if (!offset) offset = 0\n\n  const oldOffset = offset\n  const result = header.decode(buf, offset)\n  offset += header.decode.bytes\n\n  offset = decodeList(result.questions, question, buf, offset)\n  offset = decodeList(result.answers, answer, buf, offset)\n  offset = decodeList(result.authorities, answer, buf, offset)\n  offset = decodeList(result.additionals, answer, buf, offset)\n\n  exports.decode.bytes = offset - oldOffset\n\n  return result\n}\n\nexports.decode.bytes = 0\n\nexports.encodingLength = function (result) {\n  return header.encodingLength(result) +\n    encodingLengthList(result.questions || [], question) +\n    encodingLengthList(result.answers || [], answer) +\n    encodingLengthList(result.authorities || [], answer) +\n    encodingLengthList(result.additionals || [], answer)\n}\n\nexports.streamEncode = function (result) {\n  const buf = exports.encode(result)\n  const sbuf = Buffer.alloc(2)\n  sbuf.writeUInt16BE(buf.byteLength)\n  const combine = Buffer.concat([sbuf, buf])\n  exports.streamEncode.bytes = combine.byteLength\n  return combine\n}\n\nexports.streamEncode.bytes = 0\n\nexports.streamDecode = function (sbuf) {\n  const len = sbuf.readUInt16BE(0)\n  if (sbuf.byteLength < len + 2) {\n    // not enough data\n    return null\n  }\n  const result = exports.decode(sbuf.slice(2))\n  exports.streamDecode.bytes = exports.decode.bytes\n  return result\n}\n\nexports.streamDecode.bytes = 0\n\nfunction encodingLengthList (list, enc) {\n  let len = 0\n  for (let i = 0; i < list.length; i++) len += enc.encodingLength(list[i])\n  return len\n}\n\nfunction encodeList (list, enc, buf, offset) {\n  for (let i = 0; i < list.length; i++) {\n    enc.encode(list[i], buf, offset)\n    offset += enc.encode.bytes\n  }\n  return offset\n}\n\nfunction decodeList (list, enc, buf, offset) {\n  for (let i = 0; i < list.length; i++) {\n    list[i] = enc.decode(buf, offset)\n    offset += enc.decode.bytes\n  }\n  return offset\n}\n","'use strict'\n\n/*\n * Traditional DNS header OPCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-5\n */\n\nexports.toString = function (opcode) {\n  switch (opcode) {\n    case 0: return 'QUERY'\n    case 1: return 'IQUERY'\n    case 2: return 'STATUS'\n    case 3: return 'OPCODE_3'\n    case 4: return 'NOTIFY'\n    case 5: return 'UPDATE'\n    case 6: return 'OPCODE_6'\n    case 7: return 'OPCODE_7'\n    case 8: return 'OPCODE_8'\n    case 9: return 'OPCODE_9'\n    case 10: return 'OPCODE_10'\n    case 11: return 'OPCODE_11'\n    case 12: return 'OPCODE_12'\n    case 13: return 'OPCODE_13'\n    case 14: return 'OPCODE_14'\n    case 15: return 'OPCODE_15'\n  }\n  return 'OPCODE_' + opcode\n}\n\nexports.toOpcode = function (code) {\n  switch (code.toUpperCase()) {\n    case 'QUERY': return 0\n    case 'IQUERY': return 1\n    case 'STATUS': return 2\n    case 'OPCODE_3': return 3\n    case 'NOTIFY': return 4\n    case 'UPDATE': return 5\n    case 'OPCODE_6': return 6\n    case 'OPCODE_7': return 7\n    case 'OPCODE_8': return 8\n    case 'OPCODE_9': return 9\n    case 'OPCODE_10': return 10\n    case 'OPCODE_11': return 11\n    case 'OPCODE_12': return 12\n    case 'OPCODE_13': return 13\n    case 'OPCODE_14': return 14\n    case 'OPCODE_15': return 15\n  }\n  return 0\n}\n","'use strict'\n\nexports.toString = function (type) {\n  switch (type) {\n    // list at\n    // https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-11\n    case 1: return 'LLQ'\n    case 2: return 'UL'\n    case 3: return 'NSID'\n    case 5: return 'DAU'\n    case 6: return 'DHU'\n    case 7: return 'N3U'\n    case 8: return 'CLIENT_SUBNET'\n    case 9: return 'EXPIRE'\n    case 10: return 'COOKIE'\n    case 11: return 'TCP_KEEPALIVE'\n    case 12: return 'PADDING'\n    case 13: return 'CHAIN'\n    case 14: return 'KEY_TAG'\n    case 26946: return 'DEVICEID'\n  }\n  if (type < 0) {\n    return null\n  }\n  return `OPTION_${type}`\n}\n\nexports.toCode = function (name) {\n  if (typeof name === 'number') {\n    return name\n  }\n  if (!name) {\n    return -1\n  }\n  switch (name.toUpperCase()) {\n    case 'OPTION_0': return 0\n    case 'LLQ': return 1\n    case 'UL': return 2\n    case 'NSID': return 3\n    case 'OPTION_4': return 4\n    case 'DAU': return 5\n    case 'DHU': return 6\n    case 'N3U': return 7\n    case 'CLIENT_SUBNET': return 8\n    case 'EXPIRE': return 9\n    case 'COOKIE': return 10\n    case 'TCP_KEEPALIVE': return 11\n    case 'PADDING': return 12\n    case 'CHAIN': return 13\n    case 'KEY_TAG': return 14\n    case 'DEVICEID': return 26946\n    case 'OPTION_65535': return 65535\n  }\n  const m = name.match(/_(\\d+)$/)\n  if (m) {\n    return parseInt(m[1], 10)\n  }\n  return -1\n}\n","'use strict'\n\n/*\n * Traditional DNS header RCODEs (4-bits) defined by IANA in\n * https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml\n */\n\nexports.toString = function (rcode) {\n  switch (rcode) {\n    case 0: return 'NOERROR'\n    case 1: return 'FORMERR'\n    case 2: return 'SERVFAIL'\n    case 3: return 'NXDOMAIN'\n    case 4: return 'NOTIMP'\n    case 5: return 'REFUSED'\n    case 6: return 'YXDOMAIN'\n    case 7: return 'YXRRSET'\n    case 8: return 'NXRRSET'\n    case 9: return 'NOTAUTH'\n    case 10: return 'NOTZONE'\n    case 11: return 'RCODE_11'\n    case 12: return 'RCODE_12'\n    case 13: return 'RCODE_13'\n    case 14: return 'RCODE_14'\n    case 15: return 'RCODE_15'\n  }\n  return 'RCODE_' + rcode\n}\n\nexports.toRcode = function (code) {\n  switch (code.toUpperCase()) {\n    case 'NOERROR': return 0\n    case 'FORMERR': return 1\n    case 'SERVFAIL': return 2\n    case 'NXDOMAIN': return 3\n    case 'NOTIMP': return 4\n    case 'REFUSED': return 5\n    case 'YXDOMAIN': return 6\n    case 'YXRRSET': return 7\n    case 'NXRRSET': return 8\n    case 'NOTAUTH': return 9\n    case 'NOTZONE': return 10\n    case 'RCODE_11': return 11\n    case 'RCODE_12': return 12\n    case 'RCODE_13': return 13\n    case 'RCODE_14': return 14\n    case 'RCODE_15': return 15\n  }\n  return 0\n}\n","'use strict'\n\nexports.toString = function (type) {\n  switch (type) {\n    case 1: return 'A'\n    case 10: return 'NULL'\n    case 28: return 'AAAA'\n    case 18: return 'AFSDB'\n    case 42: return 'APL'\n    case 257: return 'CAA'\n    case 60: return 'CDNSKEY'\n    case 59: return 'CDS'\n    case 37: return 'CERT'\n    case 5: return 'CNAME'\n    case 49: return 'DHCID'\n    case 32769: return 'DLV'\n    case 39: return 'DNAME'\n    case 48: return 'DNSKEY'\n    case 43: return 'DS'\n    case 55: return 'HIP'\n    case 13: return 'HINFO'\n    case 45: return 'IPSECKEY'\n    case 25: return 'KEY'\n    case 36: return 'KX'\n    case 29: return 'LOC'\n    case 15: return 'MX'\n    case 35: return 'NAPTR'\n    case 2: return 'NS'\n    case 47: return 'NSEC'\n    case 50: return 'NSEC3'\n    case 51: return 'NSEC3PARAM'\n    case 12: return 'PTR'\n    case 46: return 'RRSIG'\n    case 17: return 'RP'\n    case 24: return 'SIG'\n    case 6: return 'SOA'\n    case 99: return 'SPF'\n    case 33: return 'SRV'\n    case 44: return 'SSHFP'\n    case 32768: return 'TA'\n    case 249: return 'TKEY'\n    case 52: return 'TLSA'\n    case 250: return 'TSIG'\n    case 16: return 'TXT'\n    case 252: return 'AXFR'\n    case 251: return 'IXFR'\n    case 41: return 'OPT'\n    case 255: return 'ANY'\n  }\n  return 'UNKNOWN_' + type\n}\n\nexports.toType = function (name) {\n  switch (name.toUpperCase()) {\n    case 'A': return 1\n    case 'NULL': return 10\n    case 'AAAA': return 28\n    case 'AFSDB': return 18\n    case 'APL': return 42\n    case 'CAA': return 257\n    case 'CDNSKEY': return 60\n    case 'CDS': return 59\n    case 'CERT': return 37\n    case 'CNAME': return 5\n    case 'DHCID': return 49\n    case 'DLV': return 32769\n    case 'DNAME': return 39\n    case 'DNSKEY': return 48\n    case 'DS': return 43\n    case 'HIP': return 55\n    case 'HINFO': return 13\n    case 'IPSECKEY': return 45\n    case 'KEY': return 25\n    case 'KX': return 36\n    case 'LOC': return 29\n    case 'MX': return 15\n    case 'NAPTR': return 35\n    case 'NS': return 2\n    case 'NSEC': return 47\n    case 'NSEC3': return 50\n    case 'NSEC3PARAM': return 51\n    case 'PTR': return 12\n    case 'RRSIG': return 46\n    case 'RP': return 17\n    case 'SIG': return 24\n    case 'SOA': return 6\n    case 'SPF': return 99\n    case 'SRV': return 33\n    case 'SSHFP': return 44\n    case 'TA': return 32768\n    case 'TKEY': return 249\n    case 'TLSA': return 52\n    case 'TSIG': return 250\n    case 'TXT': return 16\n    case 'AXFR': return 252\n    case 'IXFR': return 251\n    case 'OPT': return 41\n    case 'ANY': return 255\n    case '*': return 255\n  }\n  if (name.toUpperCase().startsWith('UNKNOWN_')) return parseInt(name.slice(8))\n  return 0\n}\n"],"names":["exports","toString","klass","toClass","name","toUpperCase","Buffer","require","types","rcodes","opcodes","classes","optioncodes","ip","FLUSH_MASK","encode","str","buf","offset","alloc","encodingLength","oldOffset","n","replace","length","list","split","i","len","write","bytes","decode","totalLength","consumedBytes","jumped","Error","push","jumpOffset","readUInt16BE","join","byteLength","string","s","header","h","flags","type","writeUInt16BE","id","questions","answers","authorities","additionals","flag_qr","opcode","flag_aa","flag_tc","flag_rd","flag_ra","flag_z","flag_ad","flag_cd","rcode","Array","runknown","unknown","data","copy","slice","rns","ns","dd","rsoa","soa","mname","rname","writeUInt32BE","serial","refresh","retry","expire","minimum","readUInt32BE","rtxt","txt","isArray","from","isBuffer","forEach","d","remaining","rnull","rhinfo","hinfo","cpu","os","rptr","ptr","rcname","cname","rdname","dname","rsrv","srv","priority","weight","port","target","rcaa","caa","ISSUER_CRITICAL","issuerCritical","writeUInt8","tag","value","readUInt8","rmx","mx","preference","exchange","ra","a","host","v4","raaaa","aaaa","v6","roption","option","code","toCode","spl","sourcePrefixLength","fam","family","familyOf","ipBuf","ipLen","Math","ceil","scopePrefixLength","timeout","fill","tagsLen","tags","padded","ropt","opt","options","rdlen","encodingLengthList","encodeList","o","rdnskey","dnskey","PROTOCOL_DNSSEC","ZONE_KEY","SECURE_ENTRYPOINT","key","keydata","algorithm","rrrsig","rrsig","sig","signature","toType","typeCovered","labels","originalTTL","expiration","inception","keyTag","signersName","rrp","rp","mbox","typebitmap","typelist","typesByWindow","typeid","undefined","windowBuf","window","windowLength","b","j","extents","max","rnsec","nsec","record","nextDomain","rrtypes","rnsec3","nsec3","salt","iterations","saltLength","hashLength","rds","ds","digest","digestdata","digestType","rsshfp","sshfp","getFingerprintLengthForHashType","hashType","hash","fingerprintBuf","fingerprint","fingerprintLength","renc","answer","udpPayloadSize","extendedRcode","ednsVersion","class","flush","ttl","enc","flag_do","question","decodeList","q","AUTHORITATIVE_ANSWER","TRUNCATED_RESPONSE","RECURSION_DESIRED","RECURSION_AVAILABLE","AUTHENTIC_DATA","CHECKING_DISABLED","DNSSEC_OK","result","allocing","streamEncode","sbuf","combine","concat","streamDecode","toOpcode","m","match","parseInt","toRcode","startsWith"],"sourceRoot":""}